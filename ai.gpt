# This python example uses Azure Speech Recognition for Speech collection, uses Elevenlabs for speech synthentis and OpenAI to interpet the text.
# If you want to try this out please change the API Keys

import azure.cognitiveservices.speech as speechsdk
import openai
import elevenlabs
from elevenlabs import set_api_key
set_api_key("APIKEY FOR ELEVENLABS")
openai.api_key = 'sk-OPENAIKEYS'

speech_key, service_region = "speechkey", "eastus"
speech_config = speechsdk.SpeechConfig(subscription=speech_key, region=service_region)
speech_recognizer = speechsdk.SpeechRecognizer(speech_config=speech_config)

while True:
    print("Talk now")
    result = speech_recognizer.recognize_once()
    if result.reason == speechsdk.ResultReason.RecognizedSpeech:
        print("Recognized: {}".format(result.text))
    elif result.reason == speechsdk.ResultReason.NoMatch:
        print("No speech could be recognized: {}".format(result.no_match_details))
    elif result.reason == speechsdk.ResultReason.Canceled:
        cancellation_details = result.cancellation_details
        print("Speech Recognition canceled: {}".format(cancellation_details.reason))
        if cancellation_details.reason == speechsdk.CancellationReason.Error:
            print("Error details: {}".format(cancellation_details.error_details))
    
    messages = [{"role": "system", "content": "You are an intelligent assistant."}]
    
    message = format(result.text)
    if message:
        messages.append({"role": "user", "content": message})
    
    chat = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=messages
    )
    
    reply = chat.choices[0].message.content
    print(f"ChatGPT: {reply}")
    messages.append({"role": "assistant", "content": reply})
    
    audio_stream = elevenlabs.generate(
        text=reply,
        voice="Matthew",
        stream=True
    )
    
    output = elevenlabs.stream(audio_stream)
